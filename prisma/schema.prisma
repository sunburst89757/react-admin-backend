// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      =  env("MYSQL_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String?  @unique
  username  String   @unique
  password  String
  avatarUrl String?
  isValid Boolean @default(true)
  description String?
  // 一对多做映射使用 不在数据库生成 
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int @default(2)
  file File[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id        Int      @id @default(autoincrement())
  roleName  String   @unique
  description String? 
  isValid Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // 一对多做映射使用 不在数据库生成
  user      User[]
  menus  RoleOnMenu[]
  buttons  Button[]
}
model Menu {
  id        Int      @id @default(autoincrement())
  name String @unique
  icon String?
  path String @unique
  sort Int 
  parentId Int    @default(0)
  isAuth Boolean @default(false)
  isValid Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roles RoleOnMenu[]
}

model RoleOnMenu {
  role Role @relation(fields: [roleId],references: [id])
  roleId Int
  menu Menu @relation(fields: [menuId],references: [id])
  menuId Int
  isValid Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // 双主键
  @@id([roleId,menuId])
}

model File {
  id        Int      @id @default(autoincrement())
  identifier String     @unique
  filename  String
  size String
  user User @relation(fields: [uploadBy],references: [id])
  uploadBy Int 
  createdAt DateTime @default(now())
}

model Button {
  // role Role @relation(fields: [roleId],references: [id])
  id        Int      @id @default(autoincrement())
  // 一对多做映射使用 不在数据库生成 
  role Role @relation(fields: [roleId], references: [id])
  roleId Int
  pathname  String
  add     Boolean @default(true)
  delete  Boolean @default(true)
  edit  Boolean @default(true)
  upload  Boolean @default(true)
  download  Boolean @default(true)
  review  Boolean @default(true)
  submit  Boolean @default(true)
  audit  Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}